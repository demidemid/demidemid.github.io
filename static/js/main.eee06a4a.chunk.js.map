{"version":3,"sources":["images/github-logo.svg","hooks/useLocalStorage.ts","redux/auth/auth-reducer.ts","interface/routes.ts","redux/auth/auth-action.ts","utils/consts.ts","pages/Login/index.tsx","pages/NotFound/index.tsx","components/ErrorCustom/index.tsx","components/UserCard/index.tsx","hooks/useDebounce.ts","hooks/useFetch.ts","pages/Profile/index.tsx","pages/ProfileDetail/index.tsx","pages/RepoCommitDetail/index.tsx","utils/utils.ts","App.tsx","redux/root-reducer.ts","redux/store.ts","index.tsx"],"names":["_path","useLocalStorage","key","initialValue","useState","localStorage","getItem","value","setValue","useEffect","setItem","_extends","Object","assign","target","i","arguments","length","source","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgGithubLogo","_ref","svgRef","title","titleId","props","height","viewBox","width","ref","id","fillRule","d","AuthActionTypes","ForwardRef","RouteTypes","authInitialState","payload","isLogin","authReducer","state","action","type","LOGIN","LOGOUT","loginAction","logoutAction","isLoginState","authStatus","ADMIN_USER","LoginPage","dispatch","useDispatch","useSelector","setIsLoginLocal","login","setLogin","password","setPassword","validationError","setValidationError","to","Grid","textAlign","style","verticalAlign","Column","maxWidth","Header","as","Image","GithubLogo","Form","size","Segment","stacked","background","Input","fluid","icon","iconPosition","placeholder","onChange","evt","trim","marginBottom","Button","onClick","backgroundColor","color","Message","negative","NotFoundPage","Link","ErrorCustom","errorText","padded","position","margin","minHeight","display","alignItems","UserCard","avatar_url","linkUrl","buttonName","repo","imageSize","Item","src","Content","flexDirection","justifyContent","Description","Group","marginTop","marginRight","React","memo","useDebounce","delay","debouncedValue","setDebouncedValue","handler","setTimeout","clearInterval","useFetch","url","isLoading","setIsLoading","response","setResponse","error","setError","options","setOptions","baseURL","doFetch","useCallback","axios","then","res","data","catch","ProfilePage","userLogin","match","params","searchValue","setSearchValue","debouncedSearchValue","setIsLogin","emptyList","setEmptyList","errorMessage","message","userList","items","q","Icon","name","Search","className","loading","onSearchChange","basic","content","top","right","flexWrap","map","item","info","ProfileDetailPage","repoList","owner","Table","celled","Row","HeaderCell","Body","Cell","language","description","stargazers_count","RepoCommitDetailPage","commitList","authorAvatar","find","author","commit","tree","sha","date","Intl","DateTimeFormat","year","month","day","format","Date","node_id","App","str","Boolean","convertStringToBoolean","path","component","PROFILE","exact","PROFILE_DETAIL","COMMIT_DETAIL","ROOT","combineReducers","store","createStore","rootReducer","applyMiddleware","ReduxThunk","logger","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.eee06a4a.chunk.js","sourcesContent":["var _path;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgGithubLogo(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    height: 48,\n    viewBox: \"0 0 16 16\",\n    width: 48,\n    \"aria-hidden\": \"true\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0016 8c0-4.42-3.58-8-8-8z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgGithubLogo);\nexport default __webpack_public_path__ + \"static/media/github-logo.0550a857.svg\";\nexport { ForwardRef as ReactComponent };","import { useEffect, useState } from \"react\";\n\nconst useLocalStorage = (key: string, initialValue = ``) => {\n  const [value, setValue] = useState(\n    () => localStorage.getItem(key) || initialValue\n  );\n\n  useEffect(() => {\n    localStorage.setItem(key, value);\n  }, [key, value]);\n\n  return [value, setValue] as const;\n};\n\nexport default useLocalStorage;\n","export enum AuthActionTypes {\n  LOGIN = `LOGIN`,\n  LOGOUT = `LOGOUT`,\n}\n\nexport interface IAuthAction {\n  type: AuthActionTypes;\n}\n\nexport interface IStateProps {\n  payload: { isLogin: boolean };\n}\n\nexport const authInitialState = {\n  payload: { isLogin: false },\n};\n\nconst authReducer = (\n  state: IStateProps = authInitialState,\n  action: IAuthAction\n) => {\n  switch (action.type) {\n    case AuthActionTypes.LOGIN:\n      return {\n        ...state,\n        payload: { isLogin: true },\n      };\n\n    case AuthActionTypes.LOGOUT:\n      return {\n        ...state,\n        payload: { isLogin: false },\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;\n","export enum RouteTypes {\n  LOGIN = `/login`,\n  PROFILE = `/users/:login`,\n  PROFILE_DETAIL = `/users/:id/repos`,\n  COMMIT_DETAIL = `/users/:login/repos/:repo/commits`,\n  ROOT = `/`,\n}","import { AuthActionTypes, IStateProps } from \"./auth-reducer\";\n\nexport const loginAction = () => ({ type: AuthActionTypes.LOGIN });\nexport const logoutAction = () => ({ type: AuthActionTypes.LOGOUT });\n\nexport const isLoginState = (state: { authStatus: IStateProps }) =>\n  state?.authStatus?.payload?.isLogin;\n","export const ADMIN_USER = {\n  login: `admin`,\n  password: `123`,\n}\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Redirect } from \"react-router\";\nimport {\n  Button,\n  Form,\n  Grid,\n  Header,\n  Image,\n  Message,\n  Segment,\n} from \"semantic-ui-react\";\nimport useLocalStorage from \"../../hooks/useLocalStorage\";\nimport { ReactComponent as GithubLogo } from \"../../images/github-logo.svg\";\nimport { isLoginState, loginAction } from \"../../redux/auth/auth-action\";\nimport { ADMIN_USER } from \"../../utils/consts\";\n\nconst LoginPage = () => {\n  const dispatch = useDispatch();\n  const isLogin = useSelector(isLoginState);\n  const [, setIsLoginLocal] = useLocalStorage(`isLogin`);\n\n  const [login, setLogin] = useState(``);\n  const [password, setPassword] = useState(``);\n  const [validationError, setValidationError] = useState(``);\n\n  const handleLoginClick = () => {\n    if (ADMIN_USER.login === login && ADMIN_USER.password === password) {\n      setIsLoginLocal(`true`);\n      dispatch(loginAction());\n    } else {\n      setValidationError(`Wrong login or password`);\n    }\n  };\n\n  useEffect(() => {\n    setValidationError(``);\n  }, [login, password]);\n\n  if (isLogin) {\n    return <Redirect to=\"/\" />;\n  }\n\n  return (\n    (\n      <Grid\n        textAlign=\"center\"\n        style={{ height: \"100vh\" }}\n        verticalAlign=\"middle\"\n      >\n        <Grid.Column style={{ maxWidth: 350 }}>\n          <Header as=\"h2\">\n            <Image as={GithubLogo} />\n            Log-in to your account\n          </Header>\n          <Form size=\"large\">\n            <Segment stacked style={{ background: \"#f6f8fa\" }}>\n              <Form.Input\n                fluid\n                icon=\"user\"\n                iconPosition=\"left\"\n                placeholder=\"Login\"\n                value={login}\n                onChange={(evt) => setLogin(evt.target.value.trim())}\n              />\n              <Form.Input\n                style={{ marginBottom: \"30px\" }}\n                fluid\n                icon=\"lock\"\n                iconPosition=\"left\"\n                placeholder=\"Password\"\n                type=\"password\"\n                value={password}\n                onChange={(evt) => setPassword(evt.target.value.trim())}\n              />\n\n              <Button\n                fluid\n                size=\"large\"\n                onClick={handleLoginClick}\n                style={{backgroundColor: `#2ea44f`, color: `white`}}\n              >\n                Login\n              </Button>\n            </Segment>\n          </Form>\n\n          {validationError && (\n            <Message negative>\n              <p>{validationError}</p>\n            </Message>\n          )}\n        </Grid.Column>\n      </Grid>\n    )\n  );\n};\n\nexport default LoginPage;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Button, Grid, Header } from \"semantic-ui-react\";\n\nconst NotFoundPage = () => (\n  <Grid textAlign=\"center\" style={{ height: \"100vh\" }} verticalAlign=\"middle\">\n    <Grid.Column style={{ maxWidth: 450 }}>\n      <Header as=\"h1\">404 - Not Found!</Header>\n      <Button as={Link} to=\"/\">\n        Go Home\n      </Button>\n    </Grid.Column>\n  </Grid>\n);\n\nexport default NotFoundPage;\n","import React from \"react\"\nimport { Message, Segment } from \"semantic-ui-react\"\n\nconst ErrorCustom = ({errorText = ``}) => {\n  return (\n    <Segment\n        padded=\"very\"\n        textAlign=\"center\"\n        style={{\n          position: \"relative\",\n          maxWidth: \"1000px\",\n          margin: \"0 auto\",\n          minHeight: \"100vh\",\n          display: \"flex\",\n          alignItems: \"center\"\n        }}\n      >\n        <Message negative>\n          <Message.Header>{errorText}</Message.Header>\n        </Message>\n      </Segment>\n  )\n}\n\nexport default ErrorCustom;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Button, Item, SemanticSIZES } from \"semantic-ui-react\";\n\ninterface IUserCardProps {\n  avatar_url: string;\n  login: string;\n  repo?: string;\n  linkUrl: string;\n  buttonName: string;\n  imageSize?: SemanticSIZES;\n  style?: {\n    [n: string]: string;\n  };\n}\n\nconst UserCard = ({\n  avatar_url,\n  login,\n  linkUrl,\n  buttonName,\n  style,\n  repo,\n  imageSize = `tiny`,\n}: IUserCardProps) => {\n  return (\n    <Item style={style}>\n      <Item.Image size={imageSize} src={avatar_url} />\n\n      <Item.Content\n        style={{\n          display: `flex`,\n          flexDirection: `column`,\n          justifyContent: `space-between`,\n        }}\n      >\n        <Item.Header as=\"h2\" style={{ width: \"100%\", textAlign: \"left\" }}>\n          {login}\n        </Item.Header>\n        {repo && (\n          <Item.Description as=\"p\" style={{ width: \"100%\", textAlign: \"left\" }}>\n            {repo}\n          </Item.Description>\n        )}\n        <Item.Group style={{ marginTop: `auto` }}>\n          <Button\n            fluid\n            as={Link}\n            to={linkUrl}\n            style={{\n              backgroundColor: `#2ea44f`,\n              color: `white`,\n              marginRight: \"auto\",\n              maxWidth: \"150px\",\n            }}\n          >\n            {buttonName}\n          </Button>\n        </Item.Group>\n      </Item.Content>\n    </Item>\n  );\n};\n\nexport default React.memo(UserCard);\n","import { useEffect, useState } from 'react';\n\nconst useDebounce = (value: string, delay: number) => {\n  const [debouncedValue, setDebouncedValue] = useState(value);\n\n  useEffect(() => {\n    const handler = setTimeout(() => {\n      setDebouncedValue(value);\n    }, delay);\n    return () => {\n      clearInterval(handler);\n    };\n  }, [delay, value]);\n\n  return debouncedValue;\n};\n\nexport default useDebounce;\n","import { useCallback, useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nconst useFetch = (url: string) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [response, setResponse] = useState(null);\n  const [error, setError] = useState(null);\n  const [options, setOptions] = useState({});\n\n  const baseURL = `https://api.github.com`;\n\n  const doFetch = useCallback((options = {}) => {\n    setOptions(options);\n    setIsLoading(true);\n  }, []);\n\n  useEffect(() => {\n    if (!isLoading) {\n      return;\n    }\n\n    axios(baseURL + url, options)\n      .then((res) => {\n        setResponse(res.data);\n        setIsLoading(false);\n      })\n      .catch((error) => {\n        setError(error.response.data);\n        setIsLoading(false);\n      });\n  }, [baseURL, isLoading, options, url]);\n\n  return [{ isLoading, response, error }, doFetch] as const;\n};\n\nexport default useFetch;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport {\n  Button,\n  Header,\n  Icon,\n  Item,\n  Message,\n  Search,\n  Segment,\n} from \"semantic-ui-react\";\nimport ErrorCustom from \"../../components/ErrorCustom\";\nimport UserCard from \"../../components/UserCard\";\nimport useDebounce from \"../../hooks/useDebounce\";\nimport useFetch from \"../../hooks/useFetch\";\nimport useLocalStorage from \"../../hooks/useLocalStorage\";\nimport { IProfileGH } from \"../../interface/github\";\nimport { RouteTypes } from \"../../interface/routes\";\nimport { isLoginState, logoutAction } from \"../../redux/auth/auth-action\";\n\nconst ProfilePage = (props: any) => {\n  const isLogin = useSelector(isLoginState);\n  const userLogin = props.match.params.login || ``;\n  const [searchValue, setSearchValue] = useState(userLogin);\n  const debouncedSearchValue = useDebounce(searchValue, 700);\n  const dispatch = useDispatch();\n  const [, setIsLogin] = useLocalStorage(`isLogin`);\n  const [{ response, isLoading, error }, doFetch] = useFetch(`/search/users`);\n  const [emptyList, setEmptyList] = useState(false);\n  const errorMessage = ((error as unknown) as { message: string })?.message;\n  let userList = response ? ((response as unknown) as IProfileGH).items : [];\n\n  useEffect(() => {\n    if (debouncedSearchValue) {\n      doFetch({\n        params: {\n          q: debouncedSearchValue,\n        },\n      });\n    }\n  }, [debouncedSearchValue]);\n\n  useEffect(() => {\n    setEmptyList(!userList.length && searchValue.length > 0);\n\n    if (searchValue.length === 0) {\n      setEmptyList(false);\n    }\n  }, [userList.length]);\n\n  if (!isLogin) {\n    return <Redirect to={RouteTypes.LOGIN} />;\n  }\n\n  if (errorMessage) {\n    return <ErrorCustom errorText={errorMessage} />;\n  }\n\n  const handleLogoutClick = () => {\n    dispatch(logoutAction());\n    setIsLogin(`false`);\n  };\n\n  return (\n    <Segment padded=\"very\" textAlign=\"center\" style={{ position: \"relative\" }}>\n      <Header icon>\n        <Icon name=\"search\" />\n        Find GitHub User\n      </Header>\n\n      <Search\n        className=\"search-custom\"\n        size=\"large\"\n        style={{ width: \"100%\", maxWidth: \"600px\", margin: \"0 auto\" }}\n        placeholder=\"Search by username...\"\n        loading={isLoading}\n        value={searchValue}\n        onSearchChange={(evt, data) => setSearchValue(data.value || ``)}\n      />\n      <Button\n        basic\n        color=\"red\"\n        icon=\"sign-out\"\n        content=\"log out\"\n        onClick={handleLogoutClick}\n        style={{ position: \"absolute\", top: \"3em\", right: \"3em\" }}\n      />\n\n      <Item.Group\n        style={{\n          maxWidth: \"1000px\",\n          margin: \"40px auto\",\n          display: \"flex\",\n          flexWrap: \"wrap\",\n          justifyContent: \"space-between\",\n        }}\n      >\n        {searchValue.length\n          ? userList?.map((item) => (\n              <UserCard\n                key={item.id}\n                avatar_url={item.avatar_url}\n                login={item.login}\n                linkUrl={`/users/${item.login}/repos`}\n                buttonName=\"View\"\n                style={{ maxWidth: \"30%\" }}\n              />\n            ))\n          : ``}\n\n        {emptyList && (\n          <Message\n            info\n            style={{ width: \"100%\", maxWidth: \"600px\", margin: \"0 auto\" }}\n          >\n            <Message.Header>\n              The user you are looking for does not exist, try changing your\n              query\n            </Message.Header>\n          </Message>\n        )}\n      </Item.Group>\n    </Segment>\n  );\n};\n\nexport default ProfilePage;\n","import React, { useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { Header, Item, Segment, Table } from \"semantic-ui-react\";\nimport ErrorCustom from \"../../components/ErrorCustom\";\nimport UserCard from \"../../components/UserCard\";\nimport useFetch from \"../../hooks/useFetch\";\nimport { IRepoGH } from \"../../interface/github\";\nimport { RouteTypes } from \"../../interface/routes\";\nimport { isLoginState } from \"../../redux/auth/auth-action\";\n\nconst ProfileDetailPage = (props: any) => {\n  const isLogin = useSelector(isLoginState);\n  const userLogin = props.match.params.id || ``;\n  const [{ response, isLoading, error }, doFetch] = useFetch(\n    `/users/${userLogin}/repos`\n  );\n  const repoList = ((response as unknown) as IRepoGH[]) || [];\n  const errorMessage = ((error as unknown) as { message: string })?.message;\n\n  useEffect(() => {\n    if (userLogin) {\n      doFetch();\n    }\n  }, [doFetch, userLogin]);\n\n  if (!isLogin) {\n    return <Redirect to={RouteTypes.LOGIN} />;\n  }\n\n  if (errorMessage) {\n    return <ErrorCustom errorText={errorMessage} />;\n  }\n\n  return (\n    <Segment\n      padded=\"very\"\n      textAlign=\"center\"\n      style={{ position: \"relative\", maxWidth: \"1000px\", margin: \"0 auto\" }}\n    >\n      {!isLoading ? (\n        <>\n          <Header>Profile Detail Page</Header>\n          <Item.Group\n            style={{\n              maxWidth: \"1000px\",\n              margin: \"40px auto\",\n              display: \"flex\",\n              flexWrap: \"wrap\",\n              justifyContent: \"space-between\",\n            }}\n          >\n            <UserCard\n              login={repoList[0]?.owner.login}\n              avatar_url={repoList[0]?.owner.avatar_url}\n              linkUrl={`/users/${repoList[0]?.owner.login}`}\n              imageSize=\"small\"\n              buttonName=\"Back to users\"\n            />\n          </Item.Group>\n          <Table celled>\n            <Table.Header>\n              <Table.Row>\n                <Table.HeaderCell>Name</Table.HeaderCell>\n                <Table.HeaderCell>Language</Table.HeaderCell>\n                <Table.HeaderCell>Description</Table.HeaderCell>\n                <Table.HeaderCell>Star count</Table.HeaderCell>\n              </Table.Row>\n            </Table.Header>\n\n            <Table.Body>\n              {repoList.map((item: IRepoGH) => (\n                <Table.Row key={item.id}>\n                  <Table.Cell>\n                    <Link to={`repos/${item.name}/commits`}>{item.name}</Link>\n                  </Table.Cell>\n                  <Table.Cell>{item.language}</Table.Cell>\n                  <Table.Cell>{item.description}</Table.Cell>\n                  <Table.Cell>{item.stargazers_count}</Table.Cell>\n                </Table.Row>\n              ))}\n            </Table.Body>\n          </Table>\n        </>\n      ) : (\n        <div>Loading...</div>\n      )}\n\n    </Segment>\n  );\n};\n\nexport default ProfileDetailPage;\n","import React, { useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport { Header, Item, Segment, Table } from \"semantic-ui-react\";\nimport ErrorCustom from \"../../components/ErrorCustom\";\nimport UserCard from \"../../components/UserCard\";\nimport useFetch from \"../../hooks/useFetch\";\nimport { ICommitItemGH } from \"../../interface/github\";\nimport { RouteTypes } from \"../../interface/routes\";\nimport { isLoginState } from \"../../redux/auth/auth-action\";\nimport { convertDataToIco } from \"../../utils/utils\";\n\nconst RepoCommitDetailPage = (props: any) => {\n  const isLogin = useSelector(isLoginState);\n  const { login, repo } = props?.match?.params;\n  const [{ response, isLoading, error }, doFetch] = useFetch(\n    `/repos/${login}/${repo}/commits`\n  );\n  const commitList = ((response as unknown) as ICommitItemGH[]) || [];\n  const authorAvatar =\n    commitList?.find((item: ICommitItemGH) => item?.author?.login === login)\n      ?.author?.avatar_url || ``;\n  const avatarFallback = `https://i.stack.imgur.com/frlIf.png`;\n  const errorMessage = ((error as unknown) as { message: string })?.message;\n\n  useEffect(() => {\n    doFetch();\n  }, [doFetch]);\n\n  if (!isLogin) {\n    return <Redirect to={RouteTypes.LOGIN} />;\n  }\n\n  if (errorMessage) {\n    return <ErrorCustom errorText={errorMessage} />;\n  }\n\n  return (\n    <Segment\n      padded=\"very\"\n      textAlign=\"center\"\n      style={{ position: \"relative\", maxWidth: \"1000px\", margin: \"0 auto\" }}\n    >\n      {!isLoading ? (\n        <>\n          <Header>Repositories Commit Detail Page</Header>\n          <Item.Group\n            style={{\n              maxWidth: \"1000px\",\n              margin: \"40px auto\",\n              display: \"flex\",\n              flexWrap: \"wrap\",\n              justifyContent: \"space-between\",\n            }}\n          >\n            <UserCard\n              login={login}\n              avatar_url={authorAvatar || avatarFallback}\n              linkUrl={`/users/${login}/repos`}\n              repo={repo}\n              imageSize=\"small\"\n              buttonName=\"Back to repos\"\n            />\n          </Item.Group>\n\n          <Table celled>\n            <Table.Header>\n              <Table.Row>\n                <Table.HeaderCell>Author</Table.HeaderCell>\n                <Table.HeaderCell>Commit hash</Table.HeaderCell>\n                <Table.HeaderCell>Date</Table.HeaderCell>\n              </Table.Row>\n            </Table.Header>\n\n            <Table.Body>\n              {commitList.map((item: ICommitItemGH) => (\n                <Table.Row key={item.node_id}>\n                  <Table.Cell>{item.commit.author.name}</Table.Cell>\n                  <Table.Cell>{item.commit.tree.sha}</Table.Cell>\n                  <Table.Cell>\n                    {convertDataToIco(item.commit.author.date)}\n                  </Table.Cell>\n                </Table.Row>\n              ))}\n            </Table.Body>\n          </Table>\n        </>\n      ) : (\n        <div>Loading...</div>\n      )}\n    </Segment>\n  );\n};\n\nexport default RepoCommitDetailPage;\n","export const convertStringToBoolean = (str: string) => {\n  switch (str) {\n    case `false`:\n      return false;\n    case `true`:\n      return true;\n\n    default:\n      return Boolean(str);\n  }\n};\n\nexport const convertDataToIco = (data: string) => {\n  return new Intl.DateTimeFormat(`ja-JP`, {\n    year: \"numeric\",\n    month: \"2-digit\",\n    day: \"2-digit\",\n  }).format(new Date(data));\n};\n","import React, { useEffect } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport LoginPage from \"./pages/Login\";\nimport NotFoundPage from \"./pages/NotFound\";\nimport ProfilePage from \"./pages/Profile\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport useLocalStorage from \"./hooks/useLocalStorage\";\nimport { useDispatch } from \"react-redux\";\nimport { loginAction, logoutAction } from \"./redux/auth/auth-action\";\nimport { convertStringToBoolean } from \"./utils/utils\";\nimport { RouteTypes } from \"./interface/routes\";\nimport ProfileDetailPage from \"./pages/ProfileDetail\";\nimport RepoCommitDetailPage from \"./pages/RepoCommitDetail\";\n\nfunction App() {\n  const [isLogin] = useLocalStorage(`isLogin`);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(convertStringToBoolean(isLogin) ? loginAction() : logoutAction());\n  }, [dispatch, isLogin]);\n\n  return (\n    <Router>\n      <Switch>\n        <Route path={RouteTypes.LOGIN} component={LoginPage} />\n        <Route path={RouteTypes.PROFILE} exact component={ProfilePage} />\n        <Route\n          path={RouteTypes.PROFILE_DETAIL}\n          component={ProfileDetailPage}\n          exact\n        />\n        <Route path={RouteTypes.COMMIT_DETAIL} exact component={RepoCommitDetailPage} />\n        <Route path={RouteTypes.ROOT} exact component={ProfilePage} />\n        <Route component={NotFoundPage} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import { combineReducers } from \"redux\";\nimport authReducer from \"./auth/auth-reducer\";\n\nexport default combineReducers({\n  authStatus: authReducer,\n});\n","import { createStore, applyMiddleware } from \"redux\";\nimport ReduxThunk from \"redux-thunk\";\n\nimport { logger } from \"redux-logger\";\nimport rootReducer from \"./root-reducer\";\n\nconst store = createStore(rootReducer, applyMiddleware(ReduxThunk, logger));\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}